{"version":3,"sources":["assets/counter_null.png","assets/counter_0.png","assets/counter_1.png","assets/counter_2.png","assets/counter_3.png","assets/counter_4.png","assets/counter_5.png","assets/counter_6.png","assets/counter_7.png","assets/counter_8.png","assets/counter_9.png","assets/bomb.png","assets/face_waiting.png","assets/1.png","assets/2.png","assets/3.png","assets/4.png","assets/5.png","assets/6.png","assets/7.png","assets/8.png","assets/flag.png","assets/wrong_flag.png","App.styled.js","components/Box/Box.styled.js","components/Box/index.jsx","components/BombsDisplay/BombsDisplay.styled.js","components/BombsDisplay/BombsDisplay.jsx","components/Timer/Timer.styled.js","components/Timer/Timer.jsx","components/Scoreboard/ScoreboardBox.styled.js","components/Scoreboard/Scoreboard.jsx","components/Board/Board.styled.js","components/Cell/Cell.styled.js","utils/CellUtils/toDisplay.js","components/Cell/Cell.jsx","utils/BoardUtils/cellPressed.js","utils/BoardUtils/mineCheck.js","components/Board/Board.jsx","components/Game/Game.styled.js","components/Game/Game.jsx","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Wrapper","styled","div","display","alignItems","justifyContent","flexDirection","width","height","maxWidth","maxHeight","border","margin","fontSize","color","lineHeight","backgroundColor","Box","children","rest","BombsBox","BombsImg","img","importedImage","counter_0","counter_1","counter_2","counter_3","counter_4","counter_5","counter_6","counter_7","counter_8","counter_9","counter_null","stringFlaggedAmount","flaggedAmount","stringfied","toString","length","BombsDisplay","src","charAt","alt","TimerBox","Counter","Timer","props","useState","timerSeconds","setTimerSeconds","counterRef","useRef","useEffect","gameStatus","startTimer","clearInterval","current","setInterval","Number","toFixed","ScoreboardBox","Scoreboard","statusHandler","face_waiting","onClick","style","imageRendering","BoardStyled","CellStyled","gridWidth","pressed","Icons","importedImg","num1","num2","num3","num4","num5","num6","num7","num8","Cell","cellArray","index","value","draggable","advancedChecked","bomb","flagged","wrong_flag","flag","toDisplay","cellPressed","size","cellArrayCopy","forEach","curr","mineCheck","original","checkerArray","bombCounter","filteredCheckerArray","filter","checked","Board","flagHandler","map","onContextMenu","e","key","GameBox","Game","bombs","setCellArray","setFlaggedAmount","setGameStatus","newCellArray","i","push","j","sort","a","b","Math","random","status","grid","advCheckedAmount","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f0e2ec57.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/counter_null.4131e4dd.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_0.16e248f7.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_1.884d0a26.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_2.88adbc82.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_3.da1bc452.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_4.3212d51a.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_5.92f587f4.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_6.f61a119c.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_7.0a27c454.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_8.cf994bc1.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_9.c3c93833.png\";","module.exports = __webpack_public_path__ + \"static/media/bomb.678f402e.png\";","module.exports = __webpack_public_path__ + \"static/media/face_waiting.ca1a1cca.png\";","module.exports = __webpack_public_path__ + \"static/media/1.9fc8ce65.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8d0bd440.png\";","module.exports = __webpack_public_path__ + \"static/media/3.056777f7.png\";","module.exports = __webpack_public_path__ + \"static/media/4.6b4ce951.png\";","module.exports = __webpack_public_path__ + \"static/media/5.b6614f8d.png\";","module.exports = __webpack_public_path__ + \"static/media/6.4f662ef0.png\";","module.exports = __webpack_public_path__ + \"static/media/7.70c9a422.png\";","module.exports = __webpack_public_path__ + \"static/media/8.7b216e71.png\";","module.exports = __webpack_public_path__ + \"static/media/flag.72297d82.png\";","module.exports = __webpack_public_path__ + \"static/media/wrong_flag.ebbcd989.png\";","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  \r\n  // Resetting margins, paddings, and borders\r\n  html, body,\r\n  h1, h2, h3, h4, h5, h6,\r\n  a, p, span,\r\n  em, small, strong,\r\n  sub, sup,\r\n  mark, del, ins, strike,\r\n  abbr, dfn,\r\n  blockquote, q, cite,\r\n  code, pre,\r\n  ol, ul, li, dl, dt, dd,\r\n  div, section, article,\r\n  main, aside, nav,\r\n  header, hgroup, footer,\r\n  img, figure, figcaption,\r\n  address, time,\r\n  audio, video,\r\n  canvas, iframe,\r\n  details, summary,\r\n  fieldset, form, label, legend,\r\n  table, caption,\r\n  tbody, tfoot, thead,\r\n  tr, th, td {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n  // typography\r\n  html {\r\n    font-size: 100%;\r\n  }\r\n  body {\r\n    overflow-x: hidden;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    font-size: 1rem;\r\n    margin: 0;\r\n    background-color: white;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-family: 'Quicksand', sans-serif;\r\n  }\r\n  input, textarea, button {\r\n    font-family: inherit\r\n  }\r\n  a{\r\n    text-decoration: none;\r\n  }\r\n  // Layout & box sizing\r\n  article,\r\n  aside,\r\n  footer,\r\n  header,\r\n  nav,\r\n  section,\r\n  main {\r\n    display: block;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  // Resetting specific element styles\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  ol,\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  img,\r\n  video {\r\n    max-width: 100%;\r\n  }\r\n  img {\r\n    border-style: none;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  blockquote,\r\n  q {\r\n    quotes: none;\r\n  }\r\n  blockquote:after,\r\n  blockquote:before,\r\n  q:after,\r\n  q:before {\r\n    content: \"\";\r\n    content: none;\r\n  }\r\n  // Attributes & states\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n  [disabled] {\r\n    cursor: not-allowed;\r\n  }\r\n  :focus:not(:focus-visible) {\r\n    outline: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  // *Destructures* the received props from rest into the a variable that matches the name. No need for props.display\r\n  display: ${({ display }) => (display ? display : \"Flex\")};\r\n\r\n  align-items: ${({ alignItems }) => (alignItems ? alignItems : \"initial\")};\r\n\r\n  justify-content: ${({ justifyContent }) =>\r\n    justifyContent ? justifyContent : \"start\"};\r\n\r\n  flex-direction: ${({ flexDirection }) =>\r\n    flexDirection ? flexDirection : \"row\"};\r\n\r\n  width: ${({ width }) => (width ? width : \"initial\")};\r\n\r\n  height: ${({ height }) => (height ? height : \"initial\")};\r\n\r\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : \"initial\")};\r\n\r\n  max-height: ${({ maxHeight }) => (maxHeight ? maxHeight : \"initial\")};\r\n\r\n  border: ${({ border }) => (border ? border : \"initial\")};\r\n\r\n  margin: ${({ margin }) => (margin ? margin : \"initial\")};\r\n\r\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : \"inherit\")};\r\n\r\n  color: ${({ color }) => (color ? color : \"inherit\")};\r\n\r\n  line-height: ${({ lineHeight }) => (lineHeight ? lineHeight : \"initial\")};\r\n\r\n  background-color: ${({ backgroundColor }) =>\r\n    backgroundColor ? backgroundColor : \"initial\"};\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Wrapper } from \"./Box.styled\";\r\n\r\nexport const Box = ({ children, ...rest }) => {\r\n  return <Wrapper {...rest}>{children}</Wrapper>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"../Box\";\r\n\r\nexport const BombsBox = styled(Box)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background-color: black;\r\n  padding: 0.5%;\r\n`;\r\n\r\nexport const BombsImg = styled.img`\r\n  height: calc(100% - 4px);\r\n  margin: 0 2px;\r\n  image-rendering: pixelated;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { BombsBox, BombsImg } from \"./BombsDisplay.styled\";\r\n\r\nimport counter_0 from \"../../assets/counter_0.png\";\r\nimport counter_1 from \"../../assets/counter_1.png\";\r\nimport counter_2 from \"../../assets/counter_2.png\";\r\nimport counter_3 from \"../../assets/counter_3.png\";\r\nimport counter_4 from \"../../assets/counter_4.png\";\r\nimport counter_5 from \"../../assets/counter_5.png\";\r\nimport counter_6 from \"../../assets/counter_6.png\";\r\nimport counter_7 from \"../../assets/counter_7.png\";\r\nimport counter_8 from \"../../assets/counter_8.png\";\r\nimport counter_9 from \"../../assets/counter_9.png\";\r\nimport counter_null from \"../../assets/counter_null.png\";\r\n\r\nconst importedImage = {\r\n  counter_0,\r\n  counter_1,\r\n  counter_2,\r\n  counter_3,\r\n  counter_4,\r\n  counter_5,\r\n  counter_6,\r\n  counter_7,\r\n  counter_8,\r\n  counter_9,\r\n  counter_null,\r\n};\r\n\r\n// Turns to string to be able to add the 0's\r\nconst stringFlaggedAmount = (flaggedAmount) => {\r\n  const stringfied = flaggedAmount.toString();\r\n  if (stringfied.length === 1) return \"00\" + flaggedAmount;\r\n  else if (stringfied.length === 2) return \"0\" + stringfied;\r\n  else return stringfied;\r\n};\r\n\r\nexport const BombsDisplay = ({ flaggedAmount }) => {\r\n  return (\r\n    <BombsBox>\r\n      <BombsImg\r\n        src={\r\n          flaggedAmount < 0\r\n            ? counter_null\r\n            : importedImage[\r\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(0)}`\r\n              ]\r\n        }\r\n        alt={\r\n          flaggedAmount < 0\r\n            ? \"-\"\r\n            : importedImage[\r\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(0)}`\r\n              ]\r\n        }\r\n      />\r\n      <BombsImg\r\n        src={\r\n          flaggedAmount < 0 && flaggedAmount > -10\r\n            ? importedImage[`counter_0`]\r\n            : importedImage[\r\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(1)}`\r\n              ]\r\n        }\r\n        alt={\r\n          flaggedAmount < 0 && flaggedAmount > -10\r\n            ? \"0\"\r\n            : importedImage[\r\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(1)}`\r\n              ]\r\n        }\r\n      />\r\n      <BombsImg\r\n        src={\r\n          importedImage[\r\n            `counter_${stringFlaggedAmount(flaggedAmount).charAt(2)}`\r\n          ]\r\n        }\r\n        alt={\r\n          importedImage[\r\n            `counter_${stringFlaggedAmount(flaggedAmount).charAt(3)}`\r\n          ]\r\n        }\r\n      />\r\n    </BombsBox>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"../Box/index\";\r\n\r\nexport const TimerBox = styled(Box)`\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100%;\r\n  background-color: black;\r\n  padding: 0.5%;\r\n`;\r\n\r\nexport const Counter = styled.img`\r\n  height: calc(100% - 4px);\r\n  margin: 0 2px;\r\n  image-rendering: pixelated;\r\n`;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport { TimerBox, Counter } from \"../Timer/Timer.styled\";\r\n\r\nimport counter_0 from \"../../assets/counter_0.png\";\r\nimport counter_1 from \"../../assets/counter_1.png\";\r\nimport counter_2 from \"../../assets/counter_2.png\";\r\nimport counter_3 from \"../../assets/counter_3.png\";\r\nimport counter_4 from \"../../assets/counter_4.png\";\r\nimport counter_5 from \"../../assets/counter_5.png\";\r\nimport counter_6 from \"../../assets/counter_6.png\";\r\nimport counter_7 from \"../../assets/counter_7.png\";\r\nimport counter_8 from \"../../assets/counter_8.png\";\r\nimport counter_9 from \"../../assets/counter_9.png\";\r\nimport counter_null from \"../../assets/counter_null.png\";\r\n\r\nconst importedImage = {\r\n  counter_0,\r\n  counter_1,\r\n  counter_2,\r\n  counter_3,\r\n  counter_4,\r\n  counter_5,\r\n  counter_6,\r\n  counter_7,\r\n  counter_8,\r\n  counter_9,\r\n  counter_null,\r\n};\r\n\r\nexport const Timer = (props) => {\r\n  const [timerSeconds, setTimerSeconds] = useState(\"000.00\");\r\n\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.gameStatus === \"running\") {\r\n      // game started\r\n      startTimer();\r\n    } else if (props.gameStatus === \"won\" || props.gameStatus === \"lost\") {\r\n      // Game Won or Lost\r\n      clearInterval(counterRef.current); // stops the timer\r\n    } else {\r\n      // game waiting\r\n      clearInterval(counterRef.current);\r\n      setTimerSeconds(\"000.00\"); // resets timer to 0\r\n    }\r\n  }, [props.gameStatus]);\r\n\r\n  const startTimer = () => {\r\n    counterRef.current = setInterval(() => {\r\n      setTimerSeconds((timerSeconds) =>\r\n        timerSeconds <= 9.99\r\n          ? \"00\" + (Number(timerSeconds) + 0.01).toFixed(2) // .toFixed deals with floating numbers\r\n          : timerSeconds <= 99.99\r\n          ? \"0\" + (Number(timerSeconds) + 0.01).toFixed(2)\r\n          : (Number(timerSeconds) + Number(\"000.01\")).toFixed(2)\r\n      );\r\n    }, 10);\r\n  };\r\n\r\n  return (\r\n    <TimerBox>\r\n      <Counter\r\n        src={importedImage[`counter_${timerSeconds.charAt(0)}`]} // turns into array to be able to select a char string\r\n        alt={timerSeconds.charAt(0)}\r\n      />\r\n      <Counter\r\n        src={importedImage[`counter_${timerSeconds.charAt(1)}`]}\r\n        alt={timerSeconds.charAt(1)}\r\n      />\r\n      <Counter\r\n        src={importedImage[`counter_${timerSeconds.charAt(2)}`]}\r\n        alt={timerSeconds.charAt(2)}\r\n      />\r\n      <Counter\r\n        src={importedImage[`counter_${timerSeconds.charAt(4)}`]} // skips the dot - will fix later\r\n        alt={timerSeconds.charAt(4)}\r\n      />\r\n      <Counter\r\n        src={importedImage[`counter_${timerSeconds.charAt(5)}`]}\r\n        alt={timerSeconds.charAt(5)}\r\n      />\r\n    </TimerBox>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"../Box\";\r\n\r\nexport const ScoreboardBox = styled(Box)`\r\n  justify-content: space-between;\r\n\r\n  align-items: center;\r\n  font-size: clamp(3px, 9.4vw, calc((700px * 0.85) * 0.094));\r\n\r\n  color: white;\r\n  width: calc(100% - (100% * 0.06)); // amount added in margin\r\n  height: 15%;\r\n  padding: 1.5%;\r\n  border: inset 10px hsl(0deg 0% 92%);\r\n  margin: calc(85% * 0.03) calc(100% * 0.03) 0 calc(100% * 0.03); // to be equal to the board\r\n  background-color: hsl(0, 0%, 75%);\r\n\r\n  @media (max-width: 700px) {\r\n    padding: 3px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { BombsDisplay } from \"../BombsDisplay/BombsDisplay\";\r\n\r\nimport { Timer } from \"../Timer/Timer\";\r\n\r\nimport { ScoreboardBox } from \"./ScoreboardBox.styled\";\r\n\r\nimport face_waiting from \"../../assets/face_waiting.png\";\r\n\r\nexport const Scoreboard = ({ statusHandler, gameStatus, flaggedAmount }) => {\r\n  return (\r\n    <ScoreboardBox>\r\n      <BombsDisplay flaggedAmount={flaggedAmount} />\r\n      {/* Reset Icon */}\r\n      <img\r\n        src={face_waiting}\r\n        alt={\"reset\"}\r\n        onClick={() => {\r\n          statusHandler(\"waiting\");\r\n        }}\r\n        style={{ height: \"100%\", imageRendering: \"pixelated\" }}\r\n      />\r\n      <Timer gameStatus={gameStatus} />\r\n    </ScoreboardBox>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Box } from \"../Box\";\r\n\r\nexport const BoardStyled = styled(Box)`\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  // 85% as that the parents width is 85% of the height. So with this the component will be square and - 0.06 to remove the extra margin\r\n  width: calc(100% - (100% * 0.06));\r\n  height: calc(85% - (85% * 0.06));\r\n  margin: calc(85% * 0.03) calc(100% * 0.03);\r\n  border: inset 10px hsl(0deg 0% 92%);\r\n  background-color: lightgray;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"./../Box\";\r\n\r\nexport const CellStyled = styled(Box)`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: calc((100% / ${(props) => props.gridWidth}));\r\n  height: calc((100% / ${(props) => props.gridWidth}));\r\n  background-color: ${(props) =>\r\n    props.pressed\r\n      ? \"hsl(0deg 0% 74%)\"\r\n      : \"hsl(0deg 0% 74%)\"}; // original minesweeper doesn't seem to change.\r\n\r\n  border: ${(props) =>\r\n    props.pressed\r\n      ? \"solid 2px hsl(0, 0%, 60%)\"\r\n      : \"outset 7px hsl(0deg 0% 92%)\"};\r\n`;\r\n\r\nexport const Icons = styled.img`\r\n  image-rendering: pixelated;\r\n  height: 80%;\r\n  user-select: none;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Box } from \"../../components/Box\";\r\n\r\nimport { Icons } from \"../../components/Cell/Cell.styled\";\r\n\r\nimport num1 from \"../../assets/1.png\";\r\nimport num2 from \"../../assets/2.png\";\r\nimport num3 from \"../../assets/3.png\";\r\nimport num4 from \"../../assets/4.png\";\r\nimport num5 from \"../../assets/5.png\";\r\nimport num6 from \"../../assets/6.png\";\r\nimport num7 from \"../../assets/7.png\";\r\nimport num8 from \"../../assets/8.png\";\r\nimport bomb from \"../../assets/bomb.png\";\r\nimport flag from \"../../assets/flag.png\";\r\nimport wrong_flag from \"../../assets/wrong_flag.png\";\r\n\r\n// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\r\nconst importedImg = { num1, num2, num3, num4, num5, num6, num7, num8 };\r\n\r\nexport const toDisplay = (cellArray, index, value) => {\r\n  if (cellArray[index].advancedChecked === true) {\r\n    if (cellArray[index].value === \"bombPressed\") {\r\n      return (\r\n        <Box\r\n          alignItems={\"center\"}\r\n          justifyContent={\"center\"}\r\n          backgroundColor={\"red\"}\r\n          width={\"100%\"}\r\n          height={\"100%\"}\r\n        >\r\n          {\" \"}\r\n          <Icons src={bomb} alt={value} draggable=\"false\" />\r\n        </Box>\r\n      );\r\n    } else if (cellArray[index].value === \"bomb\") {\r\n      return <Icons src={bomb} alt={value} draggable=\"false\" />;\r\n    } else {\r\n      return (\r\n        <Icons\r\n          src={importedImg[`num${cellArray[index].value}`]}\r\n          alt={value}\r\n          draggable=\"false\"\r\n        />\r\n      );\r\n    }\r\n  } else if (cellArray[index].flagged === \"wrong\") {\r\n    return <Icons src={wrong_flag} alt={\"wrong\"} draggable=\"false\" />;\r\n  } else if (cellArray[index].flagged === true) {\r\n    return <Icons src={flag} alt={\"flag\"} draggable=\"false\" />;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nimport { CellStyled } from \"./Cell.styled\";\r\n\r\nimport { toDisplay } from \"../../utils/CellUtils/toDisplay\";\r\n\r\nexport const Cell = ({\r\n  gridWidth,\r\n  pressed,\r\n  cellArray,\r\n  index,\r\n  value,\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <CellStyled\r\n      gridWidth={gridWidth}\r\n      pressed={pressed}\r\n      {...rest}\r\n      draggable=\"false\"\r\n    >\r\n      {toDisplay(cellArray, index, value)}\r\n    </CellStyled>\r\n  );\r\n};\r\n","import { mineCheck } from \"./mineCheck\";\r\n\r\n///////////////////////// Click Handler\r\nexport const cellPressed = (\r\n  index,\r\n  gameStatus,\r\n  cellArray,\r\n  statusHandler,\r\n  gridWidth,\r\n  size\r\n) => {\r\n  if (\r\n    (gameStatus === \"waiting\" || gameStatus === \"running\") &&\r\n    cellArray[index].flagged !== true && // Stops the player from activating a flagged cell.\r\n    cellArray[index].advancedChecked === false\r\n  ) {\r\n    if (cellArray[index].value === \"bomb\") {\r\n      // Sets all the cells that are bombs to \"advancedChecked\" meaning checked, meaning to be visible.\r\n      let cellArrayCopy = [...cellArray];\r\n      cellArrayCopy.forEach((curr) => {\r\n        if (curr.value === \"bomb\") {\r\n          curr.advancedChecked = true;\r\n        } else if (curr.flagged === true) {\r\n          curr.flagged = \"wrong\";\r\n        }\r\n      });\r\n      // Shows an explosion to demonstrate that it was a bomb\r\n      cellArrayCopy[index].value = \"bombPressed\";\r\n\r\n      return statusHandler(\"lost\", cellArrayCopy);\r\n    } else {\r\n      return statusHandler(\r\n        \"running\",\r\n        mineCheck(index, index, cellArray, gridWidth, size)\r\n      );\r\n    }\r\n  }\r\n};\r\n","export const mineCheck = (index, original, cellArray, gridWidth, size) => {\r\n  const cellArrayCopy = [...cellArray];\r\n\r\n  // Array is displayed as a matrix. So it checks the ones near the index starting from above and continues clockwise.\r\n  // index - matrix width = the index above, index - matrix width + 1 = top right index, etc\r\n  let checkerArray = [\r\n    index - gridWidth,\r\n    index - gridWidth + 1,\r\n    index + 1,\r\n    index + gridWidth + 1,\r\n    index + gridWidth,\r\n    index + gridWidth - 1,\r\n    index - 1,\r\n    index - gridWidth - 1,\r\n  ];\r\n\r\n  let bombCounter = 0;\r\n\r\n  if (index % gridWidth === 0) {\r\n    if (index === 0) {\r\n      // Top Left Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[0] &&\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true; // Will be skipped in the future\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        // filters indexes that will advance to check next\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        // Recursion, calls the mineCheck to do the same to the next indexes\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    } else if (index === size - gridWidth) {\r\n      // Bottom Left Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[4] &&\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    } else {\r\n      // Left Wall\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    }\r\n  } else if (index % gridWidth === gridWidth - 1) {\r\n    if (index === gridWidth - 1) {\r\n      // Top Right Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[0] &&\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    } else if (index === size - 1) {\r\n      // Bottom Right Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[4] &&\r\n          curr !== checkerArray[5]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    } else {\r\n      // Right Wall\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"bomb\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, cellArray, gridWidth, size);\r\n        });\r\n      }\r\n    }\r\n  } else if (index > 0 && index < gridWidth - 1) {\r\n    // Top Wall strickly\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    const filteredCheckerArray = checkerArray.filter(\r\n      (curr) =>\r\n        curr !== checkerArray[0] &&\r\n        curr !== checkerArray[1] &&\r\n        curr !== checkerArray[7]\r\n    );\r\n    bombCounter = 0;\r\n\r\n    filteredCheckerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"bomb\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, cellArray, gridWidth, size);\r\n      });\r\n    }\r\n  } else if (index > size - gridWidth && index < size - 1) {\r\n    // Bottom Wall strickly\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    const filteredCheckerArray = checkerArray.filter(\r\n      (curr) =>\r\n        curr !== checkerArray[3] &&\r\n        curr !== checkerArray[4] &&\r\n        curr !== checkerArray[5]\r\n    );\r\n    bombCounter = 0;\r\n\r\n    filteredCheckerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"bomb\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, cellArray, gridWidth, size);\r\n      });\r\n    }\r\n  } else {\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    // Not agains't the wall\r\n    bombCounter = 0;\r\n\r\n    checkerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = checkerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"bomb\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, cellArray, gridWidth, size);\r\n      });\r\n    }\r\n  }\r\n\r\n  return cellArrayCopy;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { BoardStyled } from \"./Board.styled\";\r\n\r\nimport { Cell } from \"../Cell/Cell\";\r\n\r\nimport { cellPressed } from \"../../utils/BoardUtils/cellPressed\";\r\n\r\nexport const Board = ({\r\n  gridWidth,\r\n  gameStatus,\r\n  statusHandler,\r\n  cellArray,\r\n  size,\r\n  flagHandler,\r\n}) => {\r\n  return (\r\n    <BoardStyled draggable=\"false\">\r\n      {cellArray.map((curr, index) => {\r\n        return (\r\n          <Cell\r\n            onClick={() =>\r\n              cellPressed(\r\n                index,\r\n                gameStatus,\r\n                cellArray,\r\n                statusHandler,\r\n                gridWidth,\r\n                size\r\n              )\r\n            }\r\n            onContextMenu={(e) => flagHandler(e, index)}\r\n            gridWidth={gridWidth}\r\n            pressed={curr.advancedChecked}\r\n            cellArray={cellArray}\r\n            index={index}\r\n            value={cellArray[index].value}\r\n            key={index}\r\n          />\r\n        );\r\n      })}\r\n    </BoardStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"../Box\";\r\n\r\nexport const GameBox = styled(Box)`\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  height: calc(100vw * 1.15);\r\n  // 85% of its height. If changed here it needs to be changed in the child components (Scoreboard and board) as they have it hardcoded as 15% and 85%.\r\n  max-width: calc(700px);\r\n  max-height: calc(\r\n    700px + 700px * 0.15\r\n  ); // plus 15% in height of the total width for the scoreboard\r\n  border: 10px outset hsl(0deg 0% 92%);\r\n  background-color: hsl(0deg 0% 74%);\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Scoreboard } from \"../Scoreboard/Scoreboard\";\r\n\r\nimport { Board } from \"../Board/Board\";\r\n\r\nimport { GameBox } from \"./Game.styled\";\r\n\r\nexport const Game = () => {\r\n  const [gridWidth] = useState(10);\r\n  const [size] = useState(100);\r\n  const [bombs] = useState(20);\r\n  const [cellArray, setCellArray] = useState([]);\r\n  const [flaggedAmount, setFlaggedAmount] = useState(bombs);\r\n\r\n  const [gameStatus, setGameStatus] = useState(\"waiting\"); // Won, lost, waiting, running.\r\n\r\n  ///////////////////////// Creator of grid & Bomb Populator\r\n  // If status of the game changes to \"waiting\" -> generate a new Cell array.\r\n  // Runs at the start and at each reset button press.\r\n  useEffect(() => {\r\n    if (gameStatus === \"waiting\") {\r\n      setFlaggedAmount(bombs);\r\n      const newCellArray = [];\r\n      for (let i = 0; i < size - bombs; i++) {\r\n        newCellArray.push({\r\n          checked: false,\r\n          advancedChecked: false,\r\n          flagged: false,\r\n        });\r\n      }\r\n      for (let j = 0; j < bombs; j++) {\r\n        newCellArray.push({\r\n          value: \"bomb\",\r\n          checked: false,\r\n          advancedChecked: false,\r\n          flagged: false,\r\n        });\r\n      }\r\n      setCellArray(newCellArray.sort((a, b) => Math.random() - 0.5));\r\n    }\r\n  }, [gameStatus, bombs, size]);\r\n\r\n  // Places flags on right click when the game is considered to be running.\r\n  const flagHandler = (e, index) => {\r\n    e.preventDefault();\r\n    if (gameStatus === \"running\") {\r\n      let cellArrayCopy = [...cellArray];\r\n      if (cellArrayCopy[index].advancedChecked === false) {\r\n        if (cellArrayCopy[index].flagged === false) {\r\n          cellArrayCopy[index].flagged = true;\r\n          setFlaggedAmount(flaggedAmount - 1);\r\n        } else {\r\n          cellArrayCopy[index].flagged = false;\r\n          setFlaggedAmount(flaggedAmount + 1);\r\n        }\r\n      }\r\n      setCellArray(cellArrayCopy);\r\n    }\r\n  };\r\n\r\n  const statusHandler = (status, grid) => {\r\n    status !== gameStatus && setGameStatus(status);\r\n\r\n    if (grid) {\r\n      grid !== cellArray && setCellArray(grid);\r\n      // Algorithm To be improved\r\n      let advCheckedAmount = 0;\r\n      grid.forEach((curr) => {\r\n        if (curr.advancedChecked) {\r\n          advCheckedAmount++;\r\n        }\r\n      });\r\n\r\n      if (advCheckedAmount === size - bombs) {\r\n        setGameStatus(\"won\");\r\n        const cellArrayCopy = [...grid];\r\n        cellArrayCopy.forEach((curr) => {\r\n          curr.advancedChecked = true; // makes everything visible\r\n        });\r\n        setCellArray(cellArrayCopy);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameBox>\r\n      <Scoreboard\r\n        statusHandler={statusHandler}\r\n        gameStatus={gameStatus}\r\n        flaggedAmount={flaggedAmount}\r\n      />\r\n      <Board\r\n        gridWidth={gridWidth}\r\n        gameStatus={gameStatus}\r\n        statusHandler={statusHandler}\r\n        cellArray={cellArray}\r\n        size={size}\r\n        flagHandler={flagHandler}\r\n      />\r\n    </GameBox>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport { GlobalStyle } from \"./App.styled\";\r\n\r\nimport { Game } from \"./components/Game/Game\";\r\n\r\nimport { Box } from \"./components/Box\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Box\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      width={\"calc(100vw)\"}\r\n      height={\"100vh\"}\r\n      backgroundColor={\"hsl(0, 0%, 15%)\"}\r\n    >\r\n      <GlobalStyle />\r\n      <Game />\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}