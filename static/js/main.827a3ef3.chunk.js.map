{"version":3,"sources":["assets/counter_null.png","assets/counter_0.png","assets/counter_1.png","assets/counter_2.png","assets/counter_3.png","assets/counter_4.png","assets/counter_5.png","assets/counter_6.png","assets/counter_7.png","assets/counter_8.png","assets/counter_9.png","assets/bomb.png","assets/face_waiting.png","assets/1.png","assets/2.png","assets/3.png","assets/4.png","assets/5.png","assets/6.png","assets/7.png","assets/8.png","assets/flag.png","assets/wrong_flag.png","App.styled.js","components/Box/Box.styled.js","components/Box/index.jsx","components/BombsDisplay/BombsDisplay.styled.js","components/BombsDisplay/BombsDisplay.jsx","components/Timer/Timer.styled.js","components/Timer/Timer.jsx","components/Scoreboard/ScoreboardBox.styled.js","components/Scoreboard/Scoreboard.jsx","components/Board/Board.styled.js","components/Cell/Cell.styled.js","utils/CellUtils/toDisplay.js","components/Cell/Cell.jsx","utils/BoardUtils/cellPressed.js","utils/BoardUtils/mineCheck.js","components/Board/Board.jsx","components/Game/Game.styled.js","components/Game/Game.jsx","App.js","index.js"],"names":["module","exports","GlobalStyle","createGlobalStyle","Wrapper","styled","div","display","alignItems","justifyContent","flexDirection","width","height","maxWidth","maxHeight","border","margin","fontSize","color","lineHeight","backgroundColor","Box","children","rest","BombsBox","BombsImg","img","importedImage","counter_0","counter_1","counter_2","counter_3","counter_4","counter_5","counter_6","counter_7","counter_8","counter_9","counter_null","stringFlaggedAmount","flaggedAmount","stringfied","toString","length","BombsDisplay","src","charAt","alt","TimerBox","Counter","Timer","props","useState","timerSeconds","setTimerSeconds","counterRef","useRef","useEffect","gameStatus","startTimer","clearInterval","current","setInterval","Number","toFixed","ScoreboardBox","EmoteButton","button","Scoreboard","statusHandler","face_waiting","onClick","style","imageRendering","BoardStyled","CellStyled","gridWidth","pressed","Icons","importedImg","num1","num2","num3","num4","num5","num6","num7","num8","Cell","cellArray","index","value","draggable","advancedChecked","bomb","flagged","wrong_flag","flag","toDisplay","cellPressed","size","cellArrayCopy","forEach","curr","mineCheck","original","checkerArray","bombCounter","filteredCheckerArray","filter","checked","Board","flagHandler","map","onContextMenu","e","key","GameBox","Game","bombs","setCellArray","setFlaggedAmount","setGameStatus","newCellArray","i","push","j","sort","a","b","Math","random","status","grid","advCheckedAmount","preventDefault","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.827a3ef3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/counter_null.4131e4dd.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_0.16e248f7.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_1.884d0a26.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_2.88adbc82.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_3.da1bc452.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_4.3212d51a.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_5.92f587f4.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_6.f61a119c.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_7.0a27c454.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_8.cf994bc1.png\";","module.exports = __webpack_public_path__ + \"static/media/counter_9.c3c93833.png\";","module.exports = __webpack_public_path__ + \"static/media/bomb.678f402e.png\";","module.exports = __webpack_public_path__ + \"static/media/face_waiting.ca1a1cca.png\";","module.exports = __webpack_public_path__ + \"static/media/1.9fc8ce65.png\";","module.exports = __webpack_public_path__ + \"static/media/2.8d0bd440.png\";","module.exports = __webpack_public_path__ + \"static/media/3.056777f7.png\";","module.exports = __webpack_public_path__ + \"static/media/4.6b4ce951.png\";","module.exports = __webpack_public_path__ + \"static/media/5.b6614f8d.png\";","module.exports = __webpack_public_path__ + \"static/media/6.4f662ef0.png\";","module.exports = __webpack_public_path__ + \"static/media/7.70c9a422.png\";","module.exports = __webpack_public_path__ + \"static/media/8.7b216e71.png\";","module.exports = __webpack_public_path__ + \"static/media/flag.72297d82.png\";","module.exports = __webpack_public_path__ + \"static/media/wrong_flag.ebbcd989.png\";","import { createGlobalStyle } from \"styled-components\";\n\nexport const GlobalStyle = createGlobalStyle`\n  \n  // Resetting margins, paddings, and borders\n  html, body,\n  h1, h2, h3, h4, h5, h6,\n  a, p, span,\n  em, small, strong,\n  sub, sup,\n  mark, del, ins, strike,\n  abbr, dfn,\n  blockquote, q, cite,\n  code, pre,\n  ol, ul, li, dl, dt, dd,\n  div, section, article,\n  main, aside, nav,\n  header, hgroup, footer,\n  img, figure, figcaption,\n  address, time,\n  audio, video,\n  canvas, iframe,\n  details, summary,\n  fieldset, form, label, legend,\n  table, caption,\n  tbody, tfoot, thead,\n  tr, th, td {\n    margin: 0;\n    padding: 0;\n    border: 0;\n  }\n  // typography\n  html {\n    font-size: 100%;\n  }\n  body {\n    overflow-x: hidden;\n    width: 100%;\n    min-height: 100%;\n    font-size: 1rem;\n    margin: 0;\n    background-color: white;\n    font-family: 'Montserrat', sans-serif;\n  }\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Quicksand', sans-serif;\n  }\n  input, textarea, button {\n    font-family: inherit\n  }\n  a{\n    text-decoration: none;\n  }\n  // Layout & box sizing\n  article,\n  aside,\n  footer,\n  header,\n  nav,\n  section,\n  main {\n    display: block;\n  }\n  * {\n    box-sizing: border-box;\n  }\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n  // Resetting specific element styles\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  ol,\n  ul {\n    list-style: none;\n  }\n  img,\n  video {\n    max-width: 100%;\n  }\n  img {\n    border-style: none;\n    max-width: 100%;\n    height: auto;\n  }\n  blockquote,\n  q {\n    quotes: none;\n  }\n  blockquote:after,\n  blockquote:before,\n  q:after,\n  q:before {\n    content: \"\";\n    content: none;\n  }\n  // Attributes & states\n  [hidden] {\n    display: none !important;\n  }\n  [disabled] {\n    cursor: not-allowed;\n  }\n  :focus:not(:focus-visible) {\n    outline: none;\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  // *Destructures* the received props from rest into the a variable that matches the name. No need for props.display\n  display: ${({ display }) => (display ? display : \"Flex\")};\n\n  align-items: ${({ alignItems }) => (alignItems ? alignItems : \"initial\")};\n\n  justify-content: ${({ justifyContent }) =>\n    justifyContent ? justifyContent : \"start\"};\n\n  flex-direction: ${({ flexDirection }) =>\n    flexDirection ? flexDirection : \"row\"};\n\n  width: ${({ width }) => (width ? width : \"initial\")};\n\n  height: ${({ height }) => (height ? height : \"initial\")};\n\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : \"initial\")};\n\n  max-height: ${({ maxHeight }) => (maxHeight ? maxHeight : \"initial\")};\n\n  border: ${({ border }) => (border ? border : \"initial\")};\n\n  margin: ${({ margin }) => (margin ? margin : \"initial\")};\n\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : \"inherit\")};\n\n  color: ${({ color }) => (color ? color : \"inherit\")};\n\n  line-height: ${({ lineHeight }) => (lineHeight ? lineHeight : \"initial\")};\n\n  background-color: ${({ backgroundColor }) =>\n    backgroundColor ? backgroundColor : \"initial\"};\n`;\n","import React from \"react\";\n\nimport { Wrapper } from \"./Box.styled\";\n\nexport const Box = ({ children, ...rest }) => {\n  return <Wrapper {...rest}>{children}</Wrapper>;\n};\n","import styled from \"styled-components\";\n\nimport { Box } from \"../Box\";\n\nexport const BombsBox = styled(Box)`\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 0.5%;\n  border: inset 3px hsl(0 0% 92%);\n  background-color: black;\n  user-select: none;\n`;\n\nexport const BombsImg = styled.img`\n  height: calc(100% - 4px);\n  margin: 0 2px;\n  image-rendering: pixelated;\n`;\n","import React from \"react\";\n\nimport { BombsBox, BombsImg } from \"./BombsDisplay.styled\";\n\nimport counter_0 from \"../../assets/counter_0.png\";\nimport counter_1 from \"../../assets/counter_1.png\";\nimport counter_2 from \"../../assets/counter_2.png\";\nimport counter_3 from \"../../assets/counter_3.png\";\nimport counter_4 from \"../../assets/counter_4.png\";\nimport counter_5 from \"../../assets/counter_5.png\";\nimport counter_6 from \"../../assets/counter_6.png\";\nimport counter_7 from \"../../assets/counter_7.png\";\nimport counter_8 from \"../../assets/counter_8.png\";\nimport counter_9 from \"../../assets/counter_9.png\";\nimport counter_null from \"../../assets/counter_null.png\";\n\nconst importedImage = {\n  counter_0,\n  counter_1,\n  counter_2,\n  counter_3,\n  counter_4,\n  counter_5,\n  counter_6,\n  counter_7,\n  counter_8,\n  counter_9,\n  counter_null,\n};\n\n// Turns to string to be able to add the 0's\nconst stringFlaggedAmount = (flaggedAmount) => {\n  const stringfied = flaggedAmount.toString();\n  if (stringfied.length === 1) return \"00\" + flaggedAmount;\n  else if (stringfied.length === 2) return \"0\" + stringfied;\n  else return stringfied;\n};\n\nexport const BombsDisplay = ({ flaggedAmount }) => {\n  return (\n    <BombsBox>\n      <BombsImg\n        src={\n          flaggedAmount < 0\n            ? counter_null\n            : importedImage[\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(0)}`\n              ]\n        }\n        alt={\n          flaggedAmount < 0\n            ? \"-\"\n            : importedImage[\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(0)}`\n              ]\n        }\n      />\n      <BombsImg\n        src={\n          flaggedAmount < 0 && flaggedAmount > -10\n            ? importedImage[`counter_0`]\n            : importedImage[\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(1)}`\n              ]\n        }\n        alt={\n          flaggedAmount < 0 && flaggedAmount > -10\n            ? \"0\"\n            : importedImage[\n                `counter_${stringFlaggedAmount(flaggedAmount).charAt(1)}`\n              ]\n        }\n      />\n      <BombsImg\n        src={\n          importedImage[\n            `counter_${stringFlaggedAmount(flaggedAmount).charAt(2)}`\n          ]\n        }\n        alt={\n          importedImage[\n            `counter_${stringFlaggedAmount(flaggedAmount).charAt(3)}`\n          ]\n        }\n      />\n    </BombsBox>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { Box } from \"../Box/index\";\n\nexport const TimerBox = styled(Box)`\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 0.5%;\n  border: inset 3px hsl(0 0% 92%);\n  background-color: black;\n`;\n\nexport const Counter = styled.img`\n  height: calc(100% - 4px);\n  margin: 0 2px;\n  image-rendering: pixelated;\n  user-select: none;\n`;\n","import React, { useState, useEffect, useRef } from \"react\";\n\nimport { TimerBox, Counter } from \"../Timer/Timer.styled\";\n\nimport counter_0 from \"../../assets/counter_0.png\";\nimport counter_1 from \"../../assets/counter_1.png\";\nimport counter_2 from \"../../assets/counter_2.png\";\nimport counter_3 from \"../../assets/counter_3.png\";\nimport counter_4 from \"../../assets/counter_4.png\";\nimport counter_5 from \"../../assets/counter_5.png\";\nimport counter_6 from \"../../assets/counter_6.png\";\nimport counter_7 from \"../../assets/counter_7.png\";\nimport counter_8 from \"../../assets/counter_8.png\";\nimport counter_9 from \"../../assets/counter_9.png\";\nimport counter_null from \"../../assets/counter_null.png\";\n\nconst importedImage = {\n  counter_0,\n  counter_1,\n  counter_2,\n  counter_3,\n  counter_4,\n  counter_5,\n  counter_6,\n  counter_7,\n  counter_8,\n  counter_9,\n  counter_null,\n};\n\nexport const Timer = (props) => {\n  const [timerSeconds, setTimerSeconds] = useState(\"000.00\");\n\n  const counterRef = useRef(null);\n\n  useEffect(() => {\n    if (props.gameStatus === \"running\") {\n      // game started\n      startTimer();\n    } else if (props.gameStatus === \"won\" || props.gameStatus === \"lost\") {\n      // Game Won or Lost\n      clearInterval(counterRef.current); // stops the timer\n    } else {\n      // game waiting\n      clearInterval(counterRef.current);\n      setTimerSeconds(\"000.00\"); // resets timer to 0\n    }\n  }, [props.gameStatus]);\n\n  const startTimer = () => {\n    counterRef.current = setInterval(() => {\n      setTimerSeconds((timerSeconds) =>\n        timerSeconds <= 9.99\n          ? \"00\" + (Number(timerSeconds) + 0.01).toFixed(2) // .toFixed deals with floating numbers\n          : timerSeconds <= 99.99\n          ? \"0\" + (Number(timerSeconds) + 0.01).toFixed(2)\n          : (Number(timerSeconds) + Number(\"000.01\")).toFixed(2)\n      );\n    }, 10);\n  };\n\n  return (\n    <TimerBox>\n      <Counter\n        src={importedImage[`counter_${timerSeconds.charAt(0)}`]} // turns into array to be able to select a char string\n        alt={timerSeconds.charAt(0)}\n      />\n      <Counter\n        src={importedImage[`counter_${timerSeconds.charAt(1)}`]}\n        alt={timerSeconds.charAt(1)}\n      />\n      <Counter\n        src={importedImage[`counter_${timerSeconds.charAt(2)}`]}\n        alt={timerSeconds.charAt(2)}\n      />\n      {/* <div style={{ width: \"15px\" }} /> */}\n      <Counter\n        src={counter_null} // skips the dot - will fix later\n        alt={\"-\"}\n      />\n      <Counter\n        src={importedImage[`counter_${timerSeconds.charAt(4)}`]} // skips the dot - will fix later\n        alt={timerSeconds.charAt(4)}\n      />\n      <Counter\n        src={importedImage[`counter_${timerSeconds.charAt(5)}`]}\n        alt={timerSeconds.charAt(5)}\n      />\n    </TimerBox>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { Box } from \"../Box\";\n\nexport const ScoreboardBox = styled(Box)`\n  justify-content: space-between;\n\n  align-items: center;\n  font-size: clamp(3px, 9.4vw, calc((700px * 0.85) * 0.094));\n\n  color: white;\n  width: calc(100% - (100% * 0.06)); // amount added in margin\n  height: 15%;\n  padding: 1.5%;\n  border: inset 6px hsl(0deg 0% 92%);\n  margin: calc(85% * 0.03) calc(100% * 0.03) 0 calc(100% * 0.03); // to be equal to the board\n  background-color: hsl(0, 0%, 75%);\n`;\n\nexport const EmoteButton = styled.button`\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  height: 100%;\n  padding: 1%;\n  border: outset 4px hsl(0 0% 92%);\n  background-color: hsl(0 0% 74%);\n  user-select: none;\n\n  &:active {\n    border: inset 4px hsl(0 0% 92%);\n  }\n`;\n","import React from \"react\";\n\nimport { BombsDisplay } from \"../BombsDisplay/BombsDisplay\";\n\nimport { Timer } from \"../Timer/Timer\";\n\nimport { ScoreboardBox, EmoteButton } from \"./ScoreboardBox.styled\";\n\nimport face_waiting from \"../../assets/face_waiting.png\";\n\nexport const Scoreboard = ({ statusHandler, gameStatus, flaggedAmount }) => {\n  return (\n    <ScoreboardBox>\n      <BombsDisplay flaggedAmount={flaggedAmount} />\n      <EmoteButton>\n        {/* Reset Icon */}\n        <img\n          src={face_waiting}\n          alt={\"reset\"}\n          onClick={() => {\n            statusHandler(\"waiting\");\n          }}\n          style={{ height: \"100%\", imageRendering: \"pixelated\" }}\n        />\n      </EmoteButton>\n      <Timer gameStatus={gameStatus} />\n    </ScoreboardBox>\n  );\n};\n","import styled from \"styled-components\";\nimport { Box } from \"../Box\";\n\nexport const BoardStyled = styled(Box)`\n  justify-content: center;\n  flex-wrap: wrap;\n  // 85% as that the parents width is 85% of the height. So with this the component will be square and - 0.06 to remove the extra margin\n  width: calc(100% - (100% * 0.06));\n  height: calc(85% - (85% * 0.06));\n  margin: calc(85% * 0.03) calc(100% * 0.03);\n  border: inset 6px hsl(0deg 0% 92%);\n  background-color: lightgray;\n`;\n","import styled from \"styled-components\";\n\nimport { Box } from \"./../Box\";\n\nexport const CellStyled = styled(Box)`\n  font-size: 25px;\n  font-weight: 600;\n\n  align-items: center;\n  justify-content: center;\n\n  width: calc((100% / ${(props) => props.gridWidth}));\n  height: calc((100% / ${(props) => props.gridWidth}));\n  background-color: ${(props) =>\n    props.pressed\n      ? \"hsl(0deg 0% 74%)\"\n      : \"hsl(0deg 0% 74%)\"}; // original minesweeper doesn't seem to change.\n\n  border: ${(props) =>\n    props.pressed\n      ? \"solid 2px hsl(0, 0%, 60%)\"\n      : \"outset 4px hsl(0deg 0% 92%)\"};\n`;\n\nexport const Icons = styled.img`\n  image-rendering: pixelated;\n  height: 80%;\n  user-select: none;\n`;\n","import React from \"react\";\n\nimport { Box } from \"../../components/Box\";\n\nimport { Icons } from \"../../components/Cell/Cell.styled\";\n\nimport num1 from \"../../assets/1.png\";\nimport num2 from \"../../assets/2.png\";\nimport num3 from \"../../assets/3.png\";\nimport num4 from \"../../assets/4.png\";\nimport num5 from \"../../assets/5.png\";\nimport num6 from \"../../assets/6.png\";\nimport num7 from \"../../assets/7.png\";\nimport num8 from \"../../assets/8.png\";\nimport bomb from \"../../assets/bomb.png\";\nimport flag from \"../../assets/flag.png\";\nimport wrong_flag from \"../../assets/wrong_flag.png\";\n\n// Allows refering in the Icons src with a \"variable\" variable bellow -> `num${value}`\nconst importedImg = { num1, num2, num3, num4, num5, num6, num7, num8 };\n\nexport const toDisplay = (cellArray, index, value) => {\n  if (cellArray[index].advancedChecked === true) {\n    if (cellArray[index].value === \"bombPressed\") {\n      return (\n        <Box\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n          backgroundColor={\"red\"}\n          width={\"100%\"}\n          height={\"100%\"}\n        >\n          {\" \"}\n          <Icons src={bomb} alt={value} draggable=\"false\" />\n        </Box>\n      );\n    } else if (cellArray[index].value === \"bomb\") {\n      return <Icons src={bomb} alt={value} draggable=\"false\" />;\n    } else {\n      return (\n        <Icons\n          src={importedImg[`num${cellArray[index].value}`]}\n          alt={value}\n          draggable=\"false\"\n        />\n      );\n    }\n  } else if (cellArray[index].flagged === \"wrong\") {\n    return <Icons src={wrong_flag} alt={\"wrong\"} draggable=\"false\" />;\n  } else if (cellArray[index].flagged === true) {\n    return <Icons src={flag} alt={\"flag\"} draggable=\"false\" />;\n  }\n};\n","import React from \"react\";\n\nimport { CellStyled } from \"./Cell.styled\";\n\nimport { toDisplay } from \"../../utils/CellUtils/toDisplay\";\n\nexport const Cell = ({\n  gridWidth,\n  pressed,\n  cellArray,\n  index,\n  value,\n  ...rest\n}) => {\n  return (\n    <CellStyled\n      gridWidth={gridWidth}\n      pressed={pressed}\n      {...rest}\n      draggable=\"false\"\n    >\n      {toDisplay(cellArray, index, value)}\n    </CellStyled>\n  );\n};\n","import { mineCheck } from \"./mineCheck\";\n\n///////////////////////// Click Handler\nexport const cellPressed = (\n  index,\n  gameStatus,\n  cellArray,\n  statusHandler,\n  gridWidth,\n  size\n) => {\n  if (\n    (gameStatus === \"waiting\" || gameStatus === \"running\") &&\n    cellArray[index].flagged !== true && // Stops the player from activating a flagged cell.\n    cellArray[index].advancedChecked === false\n  ) {\n    if (cellArray[index].value === \"bomb\") {\n      // Sets all the cells that are bombs to \"advancedChecked\" meaning checked, meaning to be visible.\n      let cellArrayCopy = [...cellArray];\n      cellArrayCopy.forEach((curr) => {\n        if (curr.value === \"bomb\") {\n          curr.advancedChecked = true;\n        } else if (curr.flagged === true) {\n          curr.flagged = \"wrong\";\n        }\n      });\n      // Shows an explosion to demonstrate that it was a bomb\n      cellArrayCopy[index].value = \"bombPressed\";\n\n      return statusHandler(\"lost\", cellArrayCopy);\n    } else {\n      return statusHandler(\n        \"running\",\n        mineCheck(index, index, cellArray, gridWidth, size)\n      );\n    }\n  }\n};\n","export const mineCheck = (index, original, cellArray, gridWidth, size) => {\n  const cellArrayCopy = [...cellArray];\n\n  // Array is displayed as a matrix. So it checks the ones near the index starting from above and continues clockwise.\n  // index - matrix width = the index above, index - matrix width + 1 = top right index, etc\n  let checkerArray = [\n    index - gridWidth,\n    index - gridWidth + 1,\n    index + 1,\n    index + gridWidth + 1,\n    index + gridWidth,\n    index + gridWidth - 1,\n    index - 1,\n    index - gridWidth - 1,\n  ];\n\n  let bombCounter = 0;\n\n  if (index % gridWidth === 0) {\n    if (index === 0) {\n      // Top Left Corner\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[0] &&\n          curr !== checkerArray[1] &&\n          curr !== checkerArray[5] &&\n          curr !== checkerArray[6] &&\n          curr !== checkerArray[7]\n      );\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true; // Will be skipped in the future\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        // filters indexes that will advance to check next\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        // Recursion, calls the mineCheck to do the same to the next indexes\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    } else if (index === size - gridWidth) {\n      // Bottom Left Corner\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[3] &&\n          curr !== checkerArray[4] &&\n          curr !== checkerArray[5] &&\n          curr !== checkerArray[6] &&\n          curr !== checkerArray[7]\n      );\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true;\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    } else {\n      // Left Wall\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[5] &&\n          curr !== checkerArray[6] &&\n          curr !== checkerArray[7]\n      );\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true;\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    }\n  } else if (index % gridWidth === gridWidth - 1) {\n    if (index === gridWidth - 1) {\n      // Top Right Corner\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[0] &&\n          curr !== checkerArray[1] &&\n          curr !== checkerArray[2] &&\n          curr !== checkerArray[3] &&\n          curr !== checkerArray[7]\n      );\n\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true;\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    } else if (index === size - 1) {\n      // Bottom Right Corner\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[1] &&\n          curr !== checkerArray[2] &&\n          curr !== checkerArray[3] &&\n          curr !== checkerArray[4] &&\n          curr !== checkerArray[5]\n      );\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true;\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    } else {\n      // Right Wall\n      if (cellArrayCopy[index].flagged !== true) {\n        cellArrayCopy[index].advancedChecked = true;\n      }\n      const filteredCheckerArray = checkerArray.filter(\n        (curr) =>\n          curr !== checkerArray[1] &&\n          curr !== checkerArray[2] &&\n          curr !== checkerArray[3]\n      );\n      bombCounter = 0;\n      filteredCheckerArray.forEach((curr) => {\n        cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n        cellArrayCopy[curr].checked = true;\n      });\n      if (bombCounter > 0) {\n        cellArrayCopy[index].value = bombCounter;\n      } else {\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n          (curr) =>\n            cellArrayCopy[curr].advancedChecked !== true &&\n            cellArrayCopy[curr].value !== \"bomb\" &&\n            curr !== original\n        );\n        filteredCheckerArrayAdvance.forEach((curr) => {\n          return mineCheck(curr, original, cellArray, gridWidth, size);\n        });\n      }\n    }\n  } else if (index > 0 && index < gridWidth - 1) {\n    // Top Wall strickly\n    if (cellArrayCopy[index].flagged !== true) {\n      cellArrayCopy[index].advancedChecked = true;\n    }\n    const filteredCheckerArray = checkerArray.filter(\n      (curr) =>\n        curr !== checkerArray[0] &&\n        curr !== checkerArray[1] &&\n        curr !== checkerArray[7]\n    );\n    bombCounter = 0;\n\n    filteredCheckerArray.forEach((curr) => {\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n      cellArrayCopy[curr].checked = true;\n    });\n    if (bombCounter > 0) {\n      cellArrayCopy[index].value = bombCounter;\n    } else {\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n        (curr) =>\n          cellArrayCopy[curr].advancedChecked !== true &&\n          cellArrayCopy[curr].value !== \"bomb\" &&\n          curr !== original\n      );\n      filteredCheckerArrayAdvance.forEach((curr) => {\n        return mineCheck(curr, original, cellArray, gridWidth, size);\n      });\n    }\n  } else if (index > size - gridWidth && index < size - 1) {\n    // Bottom Wall strickly\n    if (cellArrayCopy[index].flagged !== true) {\n      cellArrayCopy[index].advancedChecked = true;\n    }\n    const filteredCheckerArray = checkerArray.filter(\n      (curr) =>\n        curr !== checkerArray[3] &&\n        curr !== checkerArray[4] &&\n        curr !== checkerArray[5]\n    );\n    bombCounter = 0;\n\n    filteredCheckerArray.forEach((curr) => {\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n      cellArrayCopy[curr].checked = true;\n    });\n    if (bombCounter > 0) {\n      cellArrayCopy[index].value = bombCounter;\n    } else {\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\n        (curr) =>\n          cellArrayCopy[curr].advancedChecked !== true &&\n          cellArrayCopy[curr].value !== \"bomb\" &&\n          curr !== original\n      );\n      filteredCheckerArrayAdvance.forEach((curr) => {\n        return mineCheck(curr, original, cellArray, gridWidth, size);\n      });\n    }\n  } else {\n    if (cellArrayCopy[index].flagged !== true) {\n      cellArrayCopy[index].advancedChecked = true;\n    }\n    // Not agains't the wall\n    bombCounter = 0;\n\n    checkerArray.forEach((curr) => {\n      cellArrayCopy[curr].value === \"bomb\" && bombCounter++;\n      cellArrayCopy[curr].checked = true;\n    });\n\n    if (bombCounter > 0) {\n      cellArrayCopy[index].value = bombCounter;\n    } else {\n      const filteredCheckerArrayAdvance = checkerArray.filter(\n        (curr) =>\n          cellArrayCopy[curr].advancedChecked !== true &&\n          cellArrayCopy[curr].value !== \"bomb\" &&\n          curr !== original\n      );\n      filteredCheckerArrayAdvance.forEach((curr) => {\n        return mineCheck(curr, original, cellArray, gridWidth, size);\n      });\n    }\n  }\n\n  return cellArrayCopy;\n};\n","import React from \"react\";\n\nimport { BoardStyled } from \"./Board.styled\";\n\nimport { Cell } from \"../Cell/Cell\";\n\nimport { cellPressed } from \"../../utils/BoardUtils/cellPressed\";\n\nexport const Board = ({\n  gridWidth,\n  gameStatus,\n  statusHandler,\n  cellArray,\n  size,\n  flagHandler,\n}) => {\n  return (\n    <BoardStyled draggable=\"false\">\n      {cellArray.map((curr, index) => {\n        return (\n          <Cell\n            onClick={() =>\n              cellPressed(\n                index,\n                gameStatus,\n                cellArray,\n                statusHandler,\n                gridWidth,\n                size\n              )\n            }\n            onContextMenu={(e) => flagHandler(e, index)}\n            gridWidth={gridWidth}\n            pressed={curr.advancedChecked}\n            cellArray={cellArray}\n            index={index}\n            value={cellArray[index].value}\n            key={index}\n          />\n        );\n      })}\n    </BoardStyled>\n  );\n};\n","import styled from \"styled-components\";\n\nimport { Box } from \"../Box\";\n\nexport const GameBox = styled(Box)`\n  flex-direction: column;\n  width: 100vw;\n  height: calc(100vw * 1.15);\n  // 85% of its height. If changed here it needs to be changed in the child components (Scoreboard and board) as they have it hardcoded as 15% and 85%.\n  max-width: calc(450px);\n  max-height: calc(\n    450px + (450px * 0.15)\n  ); // plus 15% in height of the total width for the scoreboard\n  border: 8px outset hsl(0deg 0% 92%);\n  background-color: hsl(0deg 0% 74%);\n`;\n","import React, { useState, useEffect } from \"react\";\n\nimport { Scoreboard } from \"../Scoreboard/Scoreboard\";\n\nimport { Board } from \"../Board/Board\";\n\nimport { GameBox } from \"./Game.styled\";\n\nexport const Game = () => {\n  const [gridWidth] = useState(10);\n  const [size] = useState(100);\n  const [bombs] = useState(20);\n  const [cellArray, setCellArray] = useState([]);\n  const [flaggedAmount, setFlaggedAmount] = useState(bombs);\n\n  const [gameStatus, setGameStatus] = useState(\"waiting\"); // Won, lost, waiting, running.\n\n  ///////////////////////// Creator of grid & Bomb Populator\n  // If status of the game changes to \"waiting\" -> generate a new Cell array.\n  // Runs at the start and at each reset button press.\n  useEffect(() => {\n    if (gameStatus === \"waiting\") {\n      setFlaggedAmount(bombs);\n      const newCellArray = [];\n      for (let i = 0; i < size - bombs; i++) {\n        newCellArray.push({\n          checked: false,\n          advancedChecked: false,\n          flagged: false,\n        });\n      }\n      for (let j = 0; j < bombs; j++) {\n        newCellArray.push({\n          value: \"bomb\",\n          checked: false,\n          advancedChecked: false,\n          flagged: false,\n        });\n      }\n      setCellArray(newCellArray.sort((a, b) => Math.random() - 0.5));\n    }\n  }, [gameStatus, bombs, size]);\n\n  // Places flags on right click when the game is considered to be running.\n  const flagHandler = (e, index) => {\n    e.preventDefault();\n    if (gameStatus === \"running\") {\n      let cellArrayCopy = [...cellArray];\n      if (cellArrayCopy[index].advancedChecked === false) {\n        if (cellArrayCopy[index].flagged === false) {\n          cellArrayCopy[index].flagged = true;\n          setFlaggedAmount(flaggedAmount - 1);\n        } else {\n          cellArrayCopy[index].flagged = false;\n          setFlaggedAmount(flaggedAmount + 1);\n        }\n      }\n      setCellArray(cellArrayCopy);\n    }\n  };\n\n  const statusHandler = (status, grid) => {\n    status !== gameStatus && setGameStatus(status);\n\n    if (grid) {\n      grid !== cellArray && setCellArray(grid);\n      // Algorithm To be improved\n      let advCheckedAmount = 0;\n      grid.forEach((curr) => {\n        if (curr.advancedChecked) {\n          advCheckedAmount++;\n        }\n      });\n\n      if (advCheckedAmount === size - bombs) {\n        setGameStatus(\"won\");\n        const cellArrayCopy = [...grid];\n        cellArrayCopy.forEach((curr) => {\n          curr.advancedChecked = true; // makes everything visible\n        });\n        setCellArray(cellArrayCopy);\n      }\n    }\n  };\n\n  return (\n    <GameBox>\n      <Scoreboard\n        statusHandler={statusHandler}\n        gameStatus={gameStatus}\n        flaggedAmount={flaggedAmount}\n      />\n      <Board\n        gridWidth={gridWidth}\n        gameStatus={gameStatus}\n        statusHandler={statusHandler}\n        cellArray={cellArray}\n        size={size}\n        flagHandler={flagHandler}\n      />\n    </GameBox>\n  );\n};\n","import React from \"react\";\n\nimport { GlobalStyle } from \"./App.styled\";\n\nimport { Game } from \"./components/Game/Game\";\n\nimport { Box } from \"./components/Box\";\n\nexport const App = () => {\n  return (\n    <Box\n      alignItems={\"center\"}\n      justifyContent={\"center\"}\n      width={\"calc(100vw)\"}\n      height={\"100vh\"}\n      backgroundColor={\"hsl(180, 100%, 25.1%)\"}\n    >\n      <GlobalStyle />\n      <Game />\n    </Box>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}