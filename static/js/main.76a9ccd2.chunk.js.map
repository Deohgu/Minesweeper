{"version":3,"sources":["App.styled.js","components/Box/Box.styled.js","components/Box/index.jsx","components/Cell/Cell.styled.js","components/Cell/Cell.jsx","components/Board/Board.styled.js","components/Board/Board.jsx","utils/mineCheck.js","components/Game/Game.styled.js","components/Game/Game.jsx","components/Timer/Timer.jsx","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","Wrapper","styled","div","display","alignItems","justifyContent","flexDirection","width","height","maxWidth","maxHeight","border","margin","fontSize","color","lineHeight","backgroundColor","Box","children","rest","CellStyled","props","gridWidth","pressed","Cell","value","BoardStyled","Board","cellPressed","e","index","gameStatus","cellArray","flagged","cellArrayCopy","forEach","curr","advancedChecked","statusHandler","mineCheck","original","checkerArray","bombCounter","filteredCheckerArray","filter","checked","size","map","onClick","onContextMenu","flagHandler","key","className","style","GameBox","ScoreBoardBox","Game","useState","bombs","setCellArray","flaggedAmount","setFlaggedAmount","setGameStatus","useEffect","newCellArray","i","push","j","sort","a","b","Math","random","preventDefault","status","grid","advCheckedAmount","Timer","timerSeconds","setTimerSeconds","counterRef","useRef","startTimer","clearInterval","current","setInterval","Number","toFixed","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.76a9ccd2.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  \r\n  // Resetting margins, paddings, and borders\r\n  html, body,\r\n  h1, h2, h3, h4, h5, h6,\r\n  a, p, span,\r\n  em, small, strong,\r\n  sub, sup,\r\n  mark, del, ins, strike,\r\n  abbr, dfn,\r\n  blockquote, q, cite,\r\n  code, pre,\r\n  ol, ul, li, dl, dt, dd,\r\n  div, section, article,\r\n  main, aside, nav,\r\n  header, hgroup, footer,\r\n  img, figure, figcaption,\r\n  address, time,\r\n  audio, video,\r\n  canvas, iframe,\r\n  details, summary,\r\n  fieldset, form, label, legend,\r\n  table, caption,\r\n  tbody, tfoot, thead,\r\n  tr, th, td {\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n  }\r\n  // typography\r\n  html {\r\n    font-size: 100%;\r\n  }\r\n  body {\r\n    overflow-x: hidden;\r\n    width: 100%;\r\n    min-height: 100%;\r\n    font-size: 1rem;\r\n    margin: 0;\r\n    background-color: white;\r\n    font-family: 'Montserrat', sans-serif;\r\n  }\r\n  h1, h2, h3, h4, h5, h6 {\r\n    font-family: 'Quicksand', sans-serif;\r\n  }\r\n  input, textarea, button {\r\n    font-family: inherit\r\n  }\r\n  a{\r\n    text-decoration: none;\r\n  }\r\n  // Layout & box sizing\r\n  article,\r\n  aside,\r\n  footer,\r\n  header,\r\n  nav,\r\n  section,\r\n  main {\r\n    display: block;\r\n  }\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n  *:before,\r\n  *:after {\r\n    box-sizing: inherit;\r\n  }\r\n  // Resetting specific element styles\r\n  table {\r\n    border-collapse: collapse;\r\n    border-spacing: 0;\r\n  }\r\n  ol,\r\n  ul {\r\n    list-style: none;\r\n  }\r\n  img,\r\n  video {\r\n    max-width: 100%;\r\n  }\r\n  img {\r\n    border-style: none;\r\n    max-width: 100%;\r\n    height: auto;\r\n  }\r\n  blockquote,\r\n  q {\r\n    quotes: none;\r\n  }\r\n  blockquote:after,\r\n  blockquote:before,\r\n  q:after,\r\n  q:before {\r\n    content: \"\";\r\n    content: none;\r\n  }\r\n  // Attributes & states\r\n  [hidden] {\r\n    display: none !important;\r\n  }\r\n  [disabled] {\r\n    cursor: not-allowed;\r\n  }\r\n  :focus:not(:focus-visible) {\r\n    outline: none;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  // *Destructures* the received props from rest into the a variable that matches the name. No need for props.display\r\n  display: ${({ display }) => (display ? display : \"Flex\")};\r\n\r\n  align-items: ${({ alignItems }) => (alignItems ? alignItems : \"initial\")};\r\n\r\n  justify-content: ${({ justifyContent }) =>\r\n    justifyContent ? justifyContent : \"start\"};\r\n\r\n  flex-direction: ${({ flexDirection }) =>\r\n    flexDirection ? flexDirection : \"row\"};\r\n\r\n  width: ${({ width }) => (width ? width : \"initial\")};\r\n\r\n  height: ${({ height }) => (height ? height : \"initial\")};\r\n\r\n  max-width: ${({ maxWidth }) => (maxWidth ? maxWidth : \"initial\")};\r\n\r\n  max-height: ${({ maxHeight }) => (maxHeight ? maxHeight : \"initial\")};\r\n\r\n  border: ${({ border }) => (border ? border : \"initial\")};\r\n\r\n  margin: ${({ margin }) => (margin ? margin : \"initial\")};\r\n\r\n  font-size: ${({ fontSize }) => (fontSize ? fontSize : \"inherit\")};\r\n\r\n  color: ${({ color }) => (color ? color : \"inherit\")};\r\n\r\n  line-height: ${({ lineHeight }) => (lineHeight ? lineHeight : \"initial\")};\r\n\r\n  background-color: ${({ backgroundColor }) =>\r\n    backgroundColor ? backgroundColor : \"initial\"};\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Wrapper } from \"./Box.styled\";\r\n\r\nexport const Box = ({ children, ...rest }) => {\r\n  return <Wrapper {...rest}>{children}</Wrapper>;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nimport { Box } from \"./../Box\";\r\n\r\nconst margin = 1;\r\n\r\nexport const CellStyled = styled(Box)`\r\n  font-size: 25px;\r\n  font-weight: 600;\r\n\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  width: calc((100% / ${(props) => props.gridWidth}) - ${margin * 2}px);\r\n  height: calc((100% / ${(props) => props.gridWidth}) - ${margin * 2}px);\r\n  background-color: ${(props) =>\r\n    props.pressed ? \"hsl(0deg 0% 77%)\" : \"hsl(0deg 0% 74%)\"};\r\n  margin: ${margin}px;\r\n\r\n  box-shadow: ${(props) =>\r\n    props.pressed\r\n      ? \"inset 2px 2px 1px 1px hsl(0deg 0% 40%)\"\r\n      : \"inset -2px -2px 1px 1px hsl(0deg 0% 40%)\"};\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { CellStyled } from \"./Cell.styled\";\r\n\r\nexport const Cell = ({ gridWidth, value, pressed, ...rest }) => {\r\n  // console.log(value);\r\n\r\n  return (\r\n    <CellStyled gridWidth={gridWidth} pressed={pressed} {...rest}>\r\n      {/* CellStyled to be replaced with a reusable container component */}\r\n      {value}\r\n    </CellStyled>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { Box } from \"../Box\";\r\n\r\nexport const BoardStyled = styled(Box)`\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n  width: 100%;\r\n  height: 85%; // 85% as that the parents width is 85% of the height. So with this the component will be square\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Cell } from \"./../index\";\r\n\r\nimport { BoardStyled } from \"./Board.styled\";\r\n\r\nimport { mineCheck } from \"../../utils/mineCheck\";\r\n\r\nexport const Board = (props) => {\r\n  ///////////////////////// Creator of grid & Bomb Populator\r\n\r\n  ///////////////////////// Click Handler\r\n  const cellPressed = (e, index) => {\r\n    // After add to require it to be not checked.\r\n    if (\r\n      (props.gameStatus === \"waiting\" || props.gameStatus === \"running\") &&\r\n      props.cellArray[index].flagged !== true // Stops the player from activating a flagged cell.\r\n    ) {\r\n      if (props.cellArray[index].value === \"💣\") {\r\n        // Sets all the cells that are bombs to \"advancedChecked\" meaning checked, meaning to be visible.\r\n        let cellArrayCopy = [...props.cellArray];\r\n        cellArrayCopy.forEach((curr) => {\r\n          if (curr.value === \"💣\") {\r\n            curr.advancedChecked = true;\r\n          } else if (curr.flagged === true) {\r\n            curr.flagged = \"wrong\";\r\n          }\r\n        });\r\n        // Shows an explosion to demonstrate that it was a bomb\r\n        cellArrayCopy[index].value = \"💥\";\r\n\r\n        props.statusHandler(\"lost\", cellArrayCopy);\r\n      } else {\r\n        props.statusHandler(\"running\", mineCheck(index, index, props));\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <BoardStyled>\r\n      {/* BoardStyled to be replaced with a reusable container component */}\r\n      {props.cellArray.map((curr, index) => {\r\n        return (\r\n          <Cell\r\n            onClick={(e) => cellPressed(e, index)}\r\n            onContextMenu={(e) => props.flagHandler(e, index)}\r\n            gridWidth={props.gridWidth}\r\n            key={index}\r\n            pressed={curr.advancedChecked}\r\n            value={\r\n              curr.advancedChecked === false ? (\r\n                curr.flagged === true ? (\r\n                  // flag\r\n                  <i className=\"fas fa-flag\" style={{ fontSize: \"30px\" }}></i>\r\n                ) : curr.flagged === \"wrong\" ? (\r\n                  <i className=\"fas fa-flag\" style={{ fontSize: \"30px\" }}></i>\r\n                ) : (\r\n                  \"\"\r\n                )\r\n              ) : curr.value !== \"💣\" ? (\r\n                curr.value === 0 ? (\r\n                  \"\"\r\n                ) : curr.flagged === true ? (\r\n                  // flag\r\n                  <i className=\"far fa-flag fa-lg\"></i>\r\n                ) : curr.flagged === \"wrong\" ? (\r\n                  \"wrong\"\r\n                ) : (\r\n                  curr.value\r\n                )\r\n              ) : (\r\n                // bomb\r\n                <i className=\"fas fa-bomb fa-lg\"></i>\r\n              )\r\n            }\r\n          />\r\n        );\r\n      })}\r\n    </BoardStyled>\r\n  );\r\n};\r\n","export const mineCheck = (index, original, props) => {\r\n  const cellArrayCopy = [...props.cellArray];\r\n\r\n  // Array is displayed as a matrix. So it checks the ones near the index starting from above and continues clockwise.\r\n  // index - matrix width = the index above, index - matrix width + 1 = top right index, etc\r\n  let checkerArray = [\r\n    index - props.gridWidth,\r\n    index - props.gridWidth + 1,\r\n    index + 1,\r\n    index + props.gridWidth + 1,\r\n    index + props.gridWidth,\r\n    index + props.gridWidth - 1,\r\n    index - 1,\r\n    index - props.gridWidth - 1,\r\n  ];\r\n\r\n  let bombCounter = 0;\r\n\r\n  if (index % props.gridWidth === 0) {\r\n    if (index === 0) {\r\n      // Top Left Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[0] &&\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true; // Will be skipped in the future\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        // filters indexes that will advance to check next\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        // Recursion, calls the mineCheck to do the same to the next indexes\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    } else if (index === props.size - props.gridWidth) {\r\n      // Bottom Left Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[4] &&\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    } else {\r\n      // Left Wall\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[5] &&\r\n          curr !== checkerArray[6] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    }\r\n  } else if (index % props.gridWidth === props.gridWidth - 1) {\r\n    if (index === props.gridWidth - 1) {\r\n      // Top Right Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[0] &&\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[7]\r\n      );\r\n\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    } else if (index === props.size - 1) {\r\n      // Bottom Right Corner\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3] &&\r\n          curr !== checkerArray[4] &&\r\n          curr !== checkerArray[5]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    } else {\r\n      // Right Wall\r\n      if (cellArrayCopy[index].flagged !== true) {\r\n        cellArrayCopy[index].advancedChecked = true;\r\n      }\r\n      const filteredCheckerArray = checkerArray.filter(\r\n        (curr) =>\r\n          curr !== checkerArray[1] &&\r\n          curr !== checkerArray[2] &&\r\n          curr !== checkerArray[3]\r\n      );\r\n      bombCounter = 0;\r\n      filteredCheckerArray.forEach((curr) => {\r\n        cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n        cellArrayCopy[curr].checked = true;\r\n      });\r\n      if (bombCounter > 0) {\r\n        cellArrayCopy[index].value = bombCounter;\r\n      } else {\r\n        const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n          (curr) =>\r\n            cellArrayCopy[curr].advancedChecked !== true &&\r\n            cellArrayCopy[curr].value !== \"💣\" &&\r\n            curr !== original\r\n        );\r\n        filteredCheckerArrayAdvance.forEach((curr) => {\r\n          return mineCheck(curr, original, props);\r\n        });\r\n      }\r\n    }\r\n  } else if (index > 0 && index < props.gridWidth - 1) {\r\n    // Top Wall strickly\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    const filteredCheckerArray = checkerArray.filter(\r\n      (curr) =>\r\n        curr !== checkerArray[0] &&\r\n        curr !== checkerArray[1] &&\r\n        curr !== checkerArray[7]\r\n    );\r\n    bombCounter = 0;\r\n\r\n    filteredCheckerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"💣\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, props);\r\n      });\r\n    }\r\n  } else if (index > props.size - props.gridWidth && index < props.size - 1) {\r\n    // Bottom Wall strickly\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    const filteredCheckerArray = checkerArray.filter(\r\n      (curr) =>\r\n        curr !== checkerArray[3] &&\r\n        curr !== checkerArray[4] &&\r\n        curr !== checkerArray[5]\r\n    );\r\n    bombCounter = 0;\r\n\r\n    filteredCheckerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = filteredCheckerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"💣\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, props);\r\n      });\r\n    }\r\n  } else {\r\n    if (cellArrayCopy[index].flagged !== true) {\r\n      cellArrayCopy[index].advancedChecked = true;\r\n    }\r\n    // Not agains't the wall\r\n    bombCounter = 0;\r\n\r\n    checkerArray.forEach((curr) => {\r\n      cellArrayCopy[curr].value === \"💣\" && bombCounter++;\r\n      cellArrayCopy[curr].checked = true;\r\n    });\r\n\r\n    if (bombCounter > 0) {\r\n      cellArrayCopy[index].value = bombCounter;\r\n    } else {\r\n      const filteredCheckerArrayAdvance = checkerArray.filter(\r\n        (curr) =>\r\n          cellArrayCopy[curr].advancedChecked !== true &&\r\n          cellArrayCopy[curr].value !== \"💣\" &&\r\n          curr !== original\r\n      );\r\n      filteredCheckerArrayAdvance.forEach((curr) => {\r\n        return mineCheck(curr, original, props);\r\n      });\r\n    }\r\n  }\r\n\r\n  return cellArrayCopy;\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n\r\nimport { Box } from \"../Box\";\r\n\r\nexport const GameBox = styled(Box)`\r\n  flex-direction: column;\r\n  width: 100vw;\r\n  height: calc(100vw * 1.15);\r\n  // 85% of its height. If changed here it needs to be changed in the child components (Scoreboard and board) as they have it hardcoded as 15% and 85%.\r\n  max-width: calc(700px * 0.85);\r\n  // It wasn't working perfectly with 700px, not sure why. -14px being the size of the border ...\r\n  max-height: calc(686px);\r\n  border: 15px ridge lightgrey;\r\n\r\n`;\r\n\r\nexport const ScoreBoardBox = styled(Box)`\r\n  justify-content: space-between;\r\n\r\n  align-items: center;\r\n  font-size: clamp(3px, 9.4vw, calc((700px * 0.85) * 0.094));\r\n\r\n  color: white;\r\n  width: 100%;\r\n  height: 15%;\r\n  padding: 0 3%;\r\n  background-color: hsl(0deg 0% 55%);\r\n`;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Board, Timer } from \"./../index\";\r\n\r\nimport { Box } from \"../Box\";\r\n\r\nimport { GameBox, ScoreBoardBox } from \"./Game.styled\";\r\n\r\nexport const Game = () => {\r\n  const [gridWidth] = useState(8);\r\n  const [size] = useState(64);\r\n  const [bombs] = useState(8);\r\n  const [cellArray, setCellArray] = useState([]);\r\n  const [flaggedAmount, setFlaggedAmount] = useState(bombs);\r\n\r\n  const [gameStatus, setGameStatus] = useState(\"waiting\"); // Won, lost, waiting, running.\r\n\r\n  // If status of the game changes to \"waiting\" -> generate a new Cell array.\r\n  // Runs at the start and at each reset button press.\r\n  useEffect(() => {\r\n    if (gameStatus === \"waiting\") {\r\n      setFlaggedAmount(bombs);\r\n      const newCellArray = [];\r\n      for (let i = 0; i < size - bombs; i++) {\r\n        newCellArray.push({\r\n          checked: false,\r\n          advancedChecked: false,\r\n          flagged: false,\r\n        });\r\n      }\r\n      for (let j = 0; j < bombs; j++) {\r\n        newCellArray.push({\r\n          value: \"💣\",\r\n          checked: false,\r\n          advancedChecked: false,\r\n          flagged: false,\r\n        });\r\n      }\r\n      setCellArray(newCellArray.sort((a, b) => Math.random() - 0.5));\r\n    }\r\n  }, [gameStatus, bombs, size]);\r\n\r\n  // Places flags on right click when the game is considered to be running.\r\n  const flagHandler = (e, index) => {\r\n    e.preventDefault();\r\n    if (gameStatus === \"running\") {\r\n      let cellArrayCopy = [...cellArray];\r\n      if (cellArrayCopy[index].advancedChecked === false) {\r\n        if (cellArrayCopy[index].flagged === false) {\r\n          cellArrayCopy[index].flagged = true;\r\n          setFlaggedAmount(flaggedAmount - 1);\r\n        } else {\r\n          cellArrayCopy[index].flagged = false;\r\n          setFlaggedAmount(flaggedAmount + 1);\r\n        }\r\n      }\r\n      setCellArray(cellArrayCopy);\r\n    }\r\n  };\r\n\r\n  const statusHandler = (status, grid) => {\r\n    status !== gameStatus && setGameStatus(status);\r\n    setCellArray(grid);\r\n\r\n    // Algorithm To be improved\r\n    let advCheckedAmount = 0;\r\n    cellArray.forEach((curr) => {\r\n      if (curr.advancedChecked) {\r\n        advCheckedAmount++;\r\n      }\r\n    });\r\n\r\n    if (advCheckedAmount === size - bombs) {\r\n      setGameStatus(\"won\");\r\n      const cellArrayCopy = [...cellArray];\r\n      cellArrayCopy.forEach((curr) => {\r\n        curr.advancedChecked = true; // makes everything visible\r\n      });\r\n      // To be able to pass cellArray to the dependencies without an infinite loop\r\n      cellArray !== cellArrayCopy && setCellArray(cellArrayCopy);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <GameBox>\r\n      <ScoreBoardBox>\r\n        {/* Reset Icon */}\r\n        <Box\r\n          onClick={() => {\r\n            setGameStatus(\"waiting\");\r\n          }}\r\n          className=\"fas fa-redo-alt\"\r\n        ></Box>\r\n        <Box>\r\n          {/* clock Icon */}\r\n          <Box className=\"far fa-clock fa-lg\" margin={\"0 5px 0 0\"}></Box>\r\n          <Timer gameStatus={gameStatus} />\r\n        </Box>\r\n        <Box>\r\n          {/* flag Icon */}\r\n          <Box className=\"far fa-flag fa-lg\" margin={\"0 5px 0 0\"}></Box>\r\n          <Box>{flaggedAmount}</Box>\r\n        </Box>\r\n      </ScoreBoardBox>\r\n      <Board\r\n        gridWidth={gridWidth}\r\n        size={size}\r\n        bombs={bombs}\r\n        gameStatus={gameStatus}\r\n        cellArray={cellArray}\r\n        flagHandler={flagHandler}\r\n        statusHandler={statusHandler}\r\n      />\r\n    </GameBox>\r\n  );\r\n};\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nexport const Timer = (props) => {\r\n  const [timerSeconds, setTimerSeconds] = useState(\"000.00\");\r\n\r\n  const counterRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (props.gameStatus === \"running\") {\r\n      // game started\r\n      startTimer();\r\n    } else if (props.gameStatus === \"won\" || props.gameStatus === \"lost\") {\r\n      // Game Won or Lost\r\n      clearInterval(counterRef.current); // stops the timer\r\n    } else {\r\n      // game waiting\r\n      clearInterval(counterRef.current);\r\n      setTimerSeconds(\"000.00\"); // resets timer to 0\r\n    }\r\n  }, [props.gameStatus]);\r\n\r\n  const startTimer = () => {\r\n    counterRef.current = setInterval(() => {\r\n      setTimerSeconds((timerSeconds) =>\r\n        timerSeconds <= 9.99\r\n          ? \"00\" + (Number(timerSeconds) + 0.01).toFixed(2) // .toFixed deals with floating numbers\r\n          : timerSeconds <= 99.99\r\n          ? \"0\" + (Number(timerSeconds) + 0.01).toFixed(2)\r\n          : (Number(timerSeconds) + Number(\"000.01\")).toFixed(2)\r\n      );\r\n    }, 10);\r\n  };\r\n\r\n  return <div>{timerSeconds}</div>;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { GlobalStyle } from \"./App.styled\";\r\n\r\nimport { Game } from \"./components\";\r\n\r\nimport { Box } from \"./components/Box\";\r\n\r\nexport const App = () => {\r\n  return (\r\n    <Box\r\n      alignItems={\"center\"}\r\n      justifyContent={\"center\"}\r\n      width={\"calc(100vw)\"}\r\n      height={\"100vh\"}\r\n    >\r\n      <GlobalStyle />\r\n      <Game />\r\n    </Box>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}